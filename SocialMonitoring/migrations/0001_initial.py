# Generated by Django 4.1.2 on 2022-12-16 11:08

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConstructionSiteDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, choices=[('Jan-Mar 2022', 'Jan-Mar 2022'), ('Apr-Jun 2022', 'Apr-Jun 2022'), ('July-Aug 2022', 'July-Aug 2022')], max_length=255, null=True)),
                ('packages', models.CharField(blank=True, choices=[('CA-08', 'CA-08'), ('CA-09', 'CA-09'), ('CA-10', 'CA-10'), ('CA-11', 'CA-11'), ('CA-12', 'CA-12'), ('CA-54', 'CA-54')], max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfConduct', models.DateField(blank=True, null=True)),
                ('sitephotographs', models.ImageField(blank=True, null=True, upload_to='site_photographs/')),
                ('isDemarkingOfPathwaysCheck', models.BooleanField(blank=True)),
                ('isSignagesLabelingCheck', models.BooleanField(blank=True)),
                ('isRegularHealthCheckup', models.BooleanField(default=False)),
                ('isAvailabilityOfDoctor', models.BooleanField(default=False)),
                ('isFirstAidKit', models.BooleanField(default=False)),
                ('isDrinkingWaterCheck', models.BooleanField(blank=True)),
                ('isToiletFacility', models.BooleanField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabourCamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, choices=[('Jan-Mar 2022', 'Jan-Mar 2022'), ('Apr-Jun 2022', 'Apr-Jun 2022'), ('July-Aug 2022', 'July-Aug 2022')], max_length=255, null=True)),
                ('packages', models.CharField(blank=True, choices=[('CA-08', 'CA-08'), ('CA-09', 'CA-09'), ('CA-10', 'CA-10'), ('CA-11', 'CA-11'), ('CA-12', 'CA-12'), ('CA-54', 'CA-54')], max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfConduct', models.DateField(blank=True, null=True)),
                ('LabourCampTitle', models.CharField(blank=True, max_length=255, null=True)),
                ('transportationFacility', models.BooleanField(blank=True, null=True)),
                ('isToilet', models.BooleanField(blank=True)),
                ('isDrinkingWater', models.BooleanField(blank=True)),
                ('isDemarkingOfPathways', models.BooleanField(blank=True)),
                ('isSignagesLabeling', models.BooleanField(blank=True)),
                ('isRegularHealthCheckup', models.BooleanField(blank=True)),
                ('isAvailabilityOfDoctor', models.BooleanField(blank=True)),
                ('isFirstAidKit', models.BooleanField(blank=True)),
                ('isKitchenArea', models.BooleanField(blank=True)),
                ('isFireExecution', models.BooleanField(blank=True)),
                ('isSegregationOfWaste', models.BooleanField(blank=True)),
                ('isRoomsOrDoms', models.BooleanField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PAP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, choices=[('Jan-Mar 2022', 'Jan-Mar 2022'), ('Apr-Jun 2022', 'Apr-Jun 2022'), ('July-Aug 2022', 'July-Aug 2022')], max_length=255, null=True)),
                ('packages', models.CharField(blank=True, choices=[('CA-08', 'CA-08'), ('CA-09', 'CA-09'), ('CA-10', 'CA-10'), ('CA-11', 'CA-11'), ('CA-12', 'CA-12'), ('CA-54', 'CA-54')], max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfConduct', models.DateField(blank=True, null=True)),
                ('dateOfNotification', models.DateField(blank=True, null=True)),
                ('actionTaken', models.CharField(blank=True, choices=[('Agreed for rehabilitation', 'Agreed for rehabilitation'), ('Agreed For compensation', 'Agreed For compensation'), ('Not agreed', 'Not agreed')], max_length=100, null=True)),
                ('eligibility', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True)),
                ('categoryOfPap', models.CharField(blank=True, choices=[('individual', 'individual'), ('commercial', 'commercial'), ('land', 'land'), ('Institutional', 'Institutional'), ('other', 'other')], max_length=255, null=True)),
                ('ownershipStatus', models.CharField(blank=True, choices=[('structure', 'structure'), ('land', 'land'), ('Both', 'Both')], max_length=255, null=True)),
                ('legalStatus', models.CharField(blank=True, choices=[('legal', 'legal'), ('under dispute', 'under dispute'), ('illegal', 'illegal')], max_length=255, null=True)),
                ('rehabilitationStatus', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=255, null=True)),
                ('isShiftingAllowance', models.BooleanField(blank=True)),
                ('isLivelihoodSupport', models.CharField(blank=True, max_length=255, null=True)),
                ('isTraining', models.BooleanField(blank=True)),
                ('isTenaments', models.BooleanField(blank=True)),
                ('isTransportationAllowance', models.BooleanField(blank=True)),
                ('isfinancialSupport', models.BooleanField()),
                ('isCommunityEngagement', models.BooleanField(blank=True)),
                ('isEngagementType', models.CharField(blank=True, max_length=255, null=True)),
                ('compensationStatus', models.CharField(blank=True, choices=[('cash compensation', 'cash compensation'), ('land provided Area', 'land provided Area'), ('Alternate Accommodation/Commercial Unit', 'Alternate Accommodation/Commercial Unit')], max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rehabilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shifting_allowance', models.BooleanField(blank=True)),
                ('livelihood_support', models.CharField(blank=True, max_length=255, null=True)),
                ('traning', models.BooleanField(blank=True)),
                ('tenaments', models.BooleanField(blank=True)),
                ('transport_allowance', models.BooleanField(blank=True)),
                ('additional_financial_support_or_revolving_fund', models.BooleanField()),
                ('Community_engagement', models.CharField(blank=True, max_length=255, null=True)),
                ('PAP_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rehabilation', to='SocialMonitoring.pap')),
            ],
        ),
        migrations.CreateModel(
            name='Compensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Alternate_accommodation_or_Commercial_Unit', models.FileField(blank=True, null=True, upload_to='')),
                ('cash_compensation', models.CharField(blank=True, max_length=255, null=True)),
                ('land_provided_area', models.CharField(blank=True, max_length=255, null=True)),
                ('PAP_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Compensation', to='SocialMonitoring.pap')),
            ],
        ),
    ]
